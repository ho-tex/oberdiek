This is a generated file for the l3build validation system.
Don't change this file in any respect.
Package qstest Info: Passed: inv on input line ....
Package qstest Info: Passed: abs on input line ....
Package qstest Info: Passed: sign on input line ....
Package qstest Info: Passed: min on input line ....
Package qstest Info: Passed: max on input line ....
Package qstest Info: Passed: cmp on input line ....
\TestOdd #1#2->\Test {\bigintcalcOdd {#1}}{#2}\edef \x {\noexpand \Test {\noexpand \BigIntCalcOdd \bigintcalcAbs {#1}!}{#2}}\x 
#1<-0
#2<-0
\Test #1#2->\TestResult {#1}{#2}\TestResultTwoExpansions {#1}{#2}\TestSpaceAtEnd {#1}
#1<-\bigintcalcOdd {0}
#2<-0
\TestResult #1#2->\edef \result {#1}\Expect *{\result }{#2}
#1<-\bigintcalcOdd {0}
#2<-0
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-0
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-0
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-0
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-0
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-30
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-0
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeZero {}
#2<-\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits 0}\fi \fi 
\BIC@NormalizeZero #1#2->\ifx #2!\BIC@AfterFi { 0}\else \ifx #20\BIC@AfterFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFi {\BIC@NormalizeDigits #1#2}\fi \BIC@Fi 
#1<-
#2<-!
\BIC@AfterFi #1#2\BIC@Fi ->\fi #1
#1<- 0
#2<-\else \ifx !0\BIC@AfterFiFi {\BIC@NormalizeZero {}}\else \BIC@AfterFiFi {\BIC@NormalizeDigits !}\fi 
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\result 
\result ->0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestResultTwoExpansions #1#2->\expandafter \expandafter \expandafter \Expect \expandafter \expandafter \expandafter {#1}{#2}
#1<-\bigintcalcOdd {0}
#2<-0
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-0
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-0
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-0
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-0
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-30
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-0
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeZero {}
#2<-\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits 0}\fi \fi 
\BIC@NormalizeZero #1#2->\ifx #2!\BIC@AfterFi { 0}\else \ifx #20\BIC@AfterFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFi {\BIC@NormalizeDigits #1#2}\fi \BIC@Fi 
#1<-
#2<-!
\BIC@AfterFi #1#2\BIC@Fi ->\fi #1
#1<- 0
#2<-\else \ifx !0\BIC@AfterFiFi {\BIC@NormalizeZero {}}\else \BIC@AfterFiFi {\BIC@NormalizeDigits !}\fi 
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestSpaceAtEnd #1->\edef \resultA {#1}\edef \resultB {#1 }\Expect *{\resultA \space }*{\resultB }
#1<-\bigintcalcOdd {0}
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-0
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-0
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-0
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-0
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-30
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-0
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeZero {}
#2<-\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits 0}\fi \fi 
\BIC@NormalizeZero #1#2->\ifx #2!\BIC@AfterFi { 0}\else \ifx #20\BIC@AfterFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFi {\BIC@NormalizeDigits #1#2}\fi \BIC@Fi 
#1<-
#2<-!
\BIC@AfterFi #1#2\BIC@Fi ->\fi #1
#1<- 0
#2<-\else \ifx !0\BIC@AfterFiFi {\BIC@NormalizeZero {}}\else \BIC@AfterFiFi {\BIC@NormalizeDigits !}\fi 
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-0
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-0
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-0
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-0
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-30
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-0
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeZero {}
#2<-\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits 0}\fi \fi 
\BIC@NormalizeZero #1#2->\ifx #2!\BIC@AfterFi { 0}\else \ifx #20\BIC@AfterFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFi {\BIC@NormalizeDigits #1#2}\fi \BIC@Fi 
#1<-
#2<-!
\BIC@AfterFi #1#2\BIC@Fi ->\fi #1
#1<- 0
#2<-\else \ifx !0\BIC@AfterFiFi {\BIC@NormalizeZero {}}\else \BIC@AfterFiFi {\BIC@NormalizeDigits !}\fi 
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\resultA \space 
\resultA ->0
\space -> 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-\resultB 
\resultB ->0 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-0
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-0
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-0
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-30
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-0
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeZero {}
#2<-\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits 0}\fi \fi 
\BIC@NormalizeZero #1#2->\ifx #2!\BIC@AfterFi { 0}\else \ifx #20\BIC@AfterFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFi {\BIC@NormalizeDigits #1#2}\fi \BIC@Fi 
#1<-
#2<-!
\BIC@AfterFi #1#2\BIC@Fi ->\fi #1
#1<- 0
#2<-\else \ifx !0\BIC@AfterFiFi {\BIC@NormalizeZero {}}\else \BIC@AfterFiFi {\BIC@NormalizeDigits !}\fi 
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-0
\x ->\Test {\BigIntCalcOdd 0!}{0}
\Test #1#2->\TestResult {#1}{#2}\TestResultTwoExpansions {#1}{#2}\TestSpaceAtEnd {#1}
#1<-\BigIntCalcOdd 0!
#2<-0
\TestResult #1#2->\edef \result {#1}\Expect *{\result }{#2}
#1<-\BigIntCalcOdd 0!
#2<-0
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\result 
\result ->0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestResultTwoExpansions #1#2->\expandafter \expandafter \expandafter \Expect \expandafter \expandafter \expandafter {#1}{#2}
#1<-\BigIntCalcOdd 0!
#2<-0
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestSpaceAtEnd #1->\edef \resultA {#1}\edef \resultB {#1 }\Expect *{\resultA \space }*{\resultB }
#1<-\BigIntCalcOdd 0!
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\resultA \space 
\resultA ->0
\space -> 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-\resultB 
\resultB ->0 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestOdd #1#2->\Test {\bigintcalcOdd {#1}}{#2}\edef \x {\noexpand \Test {\noexpand \BigIntCalcOdd \bigintcalcAbs {#1}!}{#2}}\x 
#1<-1
#2<-1
\Test #1#2->\TestResult {#1}{#2}\TestResultTwoExpansions {#1}{#2}\TestSpaceAtEnd {#1}
#1<-\bigintcalcOdd {1}
#2<-1
\TestResult #1#2->\edef \result {#1}\Expect *{\result }{#2}
#1<-\bigintcalcOdd {1}
#2<-1
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-1
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-1
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-1
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-1
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-31
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-1
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\result 
\result ->1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestResultTwoExpansions #1#2->\expandafter \expandafter \expandafter \Expect \expandafter \expandafter \expandafter {#1}{#2}
#1<-\bigintcalcOdd {1}
#2<-1
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-1
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-1
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-1
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-1
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-31
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-1
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestSpaceAtEnd #1->\edef \resultA {#1}\edef \resultB {#1 }\Expect *{\resultA \space }*{\resultB }
#1<-\bigintcalcOdd {1}
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-1
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-1
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-1
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-1
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-31
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-1
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-1
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-1
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-1
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-1
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-31
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-1
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\resultA \space 
\resultA ->1
\space -> 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-\resultB 
\resultB ->1 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-1
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-1
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-1
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-31
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-1
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\x ->\Test {\BigIntCalcOdd 1!}{1}
\Test #1#2->\TestResult {#1}{#2}\TestResultTwoExpansions {#1}{#2}\TestSpaceAtEnd {#1}
#1<-\BigIntCalcOdd 1!
#2<-1
\TestResult #1#2->\edef \result {#1}\Expect *{\result }{#2}
#1<-\BigIntCalcOdd 1!
#2<-1
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\result 
\result ->1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestResultTwoExpansions #1#2->\expandafter \expandafter \expandafter \Expect \expandafter \expandafter \expandafter {#1}{#2}
#1<-\BigIntCalcOdd 1!
#2<-1
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestSpaceAtEnd #1->\edef \resultA {#1}\edef \resultB {#1 }\Expect *{\resultA \space }*{\resultB }
#1<-\BigIntCalcOdd 1!
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\resultA \space 
\resultA ->1
\space -> 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-\resultB 
\resultB ->1 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestOdd #1#2->\Test {\bigintcalcOdd {#1}}{#2}\edef \x {\noexpand \Test {\noexpand \BigIntCalcOdd \bigintcalcAbs {#1}!}{#2}}\x 
#1<-2
#2<-0
\Test #1#2->\TestResult {#1}{#2}\TestResultTwoExpansions {#1}{#2}\TestSpaceAtEnd {#1}
#1<-\bigintcalcOdd {2}
#2<-0
\TestResult #1#2->\edef \result {#1}\Expect *{\result }{#2}
#1<-\bigintcalcOdd {2}
#2<-0
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-2
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-2
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-2
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-2
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-32
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-2
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 2
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-2
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\result 
\result ->0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestResultTwoExpansions #1#2->\expandafter \expandafter \expandafter \Expect \expandafter \expandafter \expandafter {#1}{#2}
#1<-\bigintcalcOdd {2}
#2<-0
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-2
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-2
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-2
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-2
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-32
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-2
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 2
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-2
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestSpaceAtEnd #1->\edef \resultA {#1}\edef \resultB {#1 }\Expect *{\resultA \space }*{\resultB }
#1<-\bigintcalcOdd {2}
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-2
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-2
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-2
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-2
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-32
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-2
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 2
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-2
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-2
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-2
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-2
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-2
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-32
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-2
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 2
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-2
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\resultA \space 
\resultA ->0
\space -> 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-\resultB 
\resultB ->0 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-2
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-2
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-2
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-32
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-2
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 2
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-2
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-2
\x ->\Test {\BigIntCalcOdd 2!}{0}
\Test #1#2->\TestResult {#1}{#2}\TestResultTwoExpansions {#1}{#2}\TestSpaceAtEnd {#1}
#1<-\BigIntCalcOdd 2!
#2<-0
\TestResult #1#2->\edef \result {#1}\Expect *{\result }{#2}
#1<-\BigIntCalcOdd 2!
#2<-0
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\result 
\result ->0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestResultTwoExpansions #1#2->\expandafter \expandafter \expandafter \Expect \expandafter \expandafter \expandafter {#1}{#2}
#1<-\BigIntCalcOdd 2!
#2<-0
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestSpaceAtEnd #1->\edef \resultA {#1}\edef \resultB {#1 }\Expect *{\resultA \space }*{\resultB }
#1<-\BigIntCalcOdd 2!
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\resultA \space 
\resultA ->0
\space -> 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-\resultB 
\resultB ->0 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestOdd #1#2->\Test {\bigintcalcOdd {#1}}{#2}\edef \x {\noexpand \Test {\noexpand \BigIntCalcOdd \bigintcalcAbs {#1}!}{#2}}\x 
#1<-3
#2<-1
\Test #1#2->\TestResult {#1}{#2}\TestResultTwoExpansions {#1}{#2}\TestSpaceAtEnd {#1}
#1<-\bigintcalcOdd {3}
#2<-1
\TestResult #1#2->\edef \result {#1}\Expect *{\result }{#2}
#1<-\bigintcalcOdd {3}
#2<-1
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-3
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-3
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-3
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-3
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-33
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-3
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 3
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-3
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\result 
\result ->1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestResultTwoExpansions #1#2->\expandafter \expandafter \expandafter \Expect \expandafter \expandafter \expandafter {#1}{#2}
#1<-\bigintcalcOdd {3}
#2<-1
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-3
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-3
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-3
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-3
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-33
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-3
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 3
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-3
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestSpaceAtEnd #1->\edef \resultA {#1}\edef \resultB {#1 }\Expect *{\resultA \space }*{\resultB }
#1<-\bigintcalcOdd {3}
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-3
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-3
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-3
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-3
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-33
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-3
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 3
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-3
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-3
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-3
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-3
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-3
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-33
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-3
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 3
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-3
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\resultA \space 
\resultA ->1
\space -> 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-\resultB 
\resultB ->1 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-3
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-3
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-3
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-33
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-3
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 3
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-3
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-3
\x ->\Test {\BigIntCalcOdd 3!}{1}
\Test #1#2->\TestResult {#1}{#2}\TestResultTwoExpansions {#1}{#2}\TestSpaceAtEnd {#1}
#1<-\BigIntCalcOdd 3!
#2<-1
\TestResult #1#2->\edef \result {#1}\Expect *{\result }{#2}
#1<-\BigIntCalcOdd 3!
#2<-1
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\result 
\result ->1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestResultTwoExpansions #1#2->\expandafter \expandafter \expandafter \Expect \expandafter \expandafter \expandafter {#1}{#2}
#1<-\BigIntCalcOdd 3!
#2<-1
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestSpaceAtEnd #1->\edef \resultA {#1}\edef \resultB {#1 }\Expect *{\resultA \space }*{\resultB }
#1<-\BigIntCalcOdd 3!
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\resultA \space 
\resultA ->1
\space -> 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-\resultB 
\resultB ->1 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestOdd #1#2->\Test {\bigintcalcOdd {#1}}{#2}\edef \x {\noexpand \Test {\noexpand \BigIntCalcOdd \bigintcalcAbs {#1}!}{#2}}\x 
#1<-14
#2<-0
\Test #1#2->\TestResult {#1}{#2}\TestResultTwoExpansions {#1}{#2}\TestSpaceAtEnd {#1}
#1<-\bigintcalcOdd {14}
#2<-0
\TestResult #1#2->\edef \result {#1}\Expect *{\result }{#2}
#1<-\bigintcalcOdd {14}
#2<-0
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-14
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-14
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-14
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-14
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-3134
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-14
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\result 
\result ->0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestResultTwoExpansions #1#2->\expandafter \expandafter \expandafter \Expect \expandafter \expandafter \expandafter {#1}{#2}
#1<-\bigintcalcOdd {14}
#2<-0
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-14
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-14
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-14
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-14
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-3134
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-14
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestSpaceAtEnd #1->\edef \resultA {#1}\edef \resultB {#1 }\Expect *{\resultA \space }*{\resultB }
#1<-\bigintcalcOdd {14}
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-14
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-14
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-14
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-14
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-3134
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-14
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-14
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-14
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-14
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-14
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-3134
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-14
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\resultA \space 
\resultA ->0
\space -> 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-\resultB 
\resultB ->0 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-14
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-14
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-14
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-3134
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-14
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\x ->\Test {\BigIntCalcOdd 14!}{0}
\Test #1#2->\TestResult {#1}{#2}\TestResultTwoExpansions {#1}{#2}\TestSpaceAtEnd {#1}
#1<-\BigIntCalcOdd 14!
#2<-0
\TestResult #1#2->\edef \result {#1}\Expect *{\result }{#2}
#1<-\BigIntCalcOdd 14!
#2<-0
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-14
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\result 
\result ->0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestResultTwoExpansions #1#2->\expandafter \expandafter \expandafter \Expect \expandafter \expandafter \expandafter {#1}{#2}
#1<-\BigIntCalcOdd 14!
#2<-0
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-14
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestSpaceAtEnd #1->\edef \resultA {#1}\edef \resultB {#1 }\Expect *{\resultA \space }*{\resultB }
#1<-\BigIntCalcOdd 14!
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-14
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-14
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\resultA \space 
\resultA ->0
\space -> 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-\resultB 
\resultB ->0 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestOdd #1#2->\Test {\bigintcalcOdd {#1}}{#2}\edef \x {\noexpand \Test {\noexpand \BigIntCalcOdd \bigintcalcAbs {#1}!}{#2}}\x 
#1<-15
#2<-1
\Test #1#2->\TestResult {#1}{#2}\TestResultTwoExpansions {#1}{#2}\TestSpaceAtEnd {#1}
#1<-\bigintcalcOdd {15}
#2<-1
\TestResult #1#2->\edef \result {#1}\Expect *{\result }{#2}
#1<-\bigintcalcOdd {15}
#2<-1
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-15
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-15
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-15
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-15
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-3135
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-15
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\result 
\result ->1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestResultTwoExpansions #1#2->\expandafter \expandafter \expandafter \Expect \expandafter \expandafter \expandafter {#1}{#2}
#1<-\bigintcalcOdd {15}
#2<-1
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-15
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-15
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-15
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-15
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-3135
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-15
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestSpaceAtEnd #1->\edef \resultA {#1}\edef \resultB {#1 }\Expect *{\resultA \space }*{\resultB }
#1<-\bigintcalcOdd {15}
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-15
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-15
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-15
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-15
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-3135
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-15
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-15
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-15
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-15
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-15
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-3135
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-15
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\resultA \space 
\resultA ->1
\space -> 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-\resultB 
\resultB ->1 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-15
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-15
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-15
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-3135
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-15
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\x ->\Test {\BigIntCalcOdd 15!}{1}
\Test #1#2->\TestResult {#1}{#2}\TestResultTwoExpansions {#1}{#2}\TestSpaceAtEnd {#1}
#1<-\BigIntCalcOdd 15!
#2<-1
\TestResult #1#2->\edef \result {#1}\Expect *{\result }{#2}
#1<-\BigIntCalcOdd 15!
#2<-1
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-15
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\result 
\result ->1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestResultTwoExpansions #1#2->\expandafter \expandafter \expandafter \Expect \expandafter \expandafter \expandafter {#1}{#2}
#1<-\BigIntCalcOdd 15!
#2<-1
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-15
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestSpaceAtEnd #1->\edef \resultA {#1}\edef \resultB {#1 }\Expect *{\resultA \space }*{\resultB }
#1<-\BigIntCalcOdd 15!
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-15
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-15
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\resultA \space 
\resultA ->1
\space -> 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-\resultB 
\resultB ->1 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestOdd #1#2->\Test {\bigintcalcOdd {#1}}{#2}\edef \x {\noexpand \Test {\noexpand \BigIntCalcOdd \bigintcalcAbs {#1}!}{#2}}\x 
#1<-12345678901234567896
#2<-0
\Test #1#2->\TestResult {#1}{#2}\TestResultTwoExpansions {#1}{#2}\TestSpaceAtEnd {#1}
#1<-\bigintcalcOdd {12345678901234567896}
#2<-0
\TestResult #1#2->\edef \result {#1}\Expect *{\result }{#2}
#1<-\bigintcalcOdd {12345678901234567896}
#2<-0
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-12345678901234567896
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-12345678901234567896
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-12345678901234567896
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-12345678901234567896
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-3132333435363738393031323334353637383936
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-12345678901234567896
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\result 
\result ->0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestResultTwoExpansions #1#2->\expandafter \expandafter \expandafter \Expect \expandafter \expandafter \expandafter {#1}{#2}
#1<-\bigintcalcOdd {12345678901234567896}
#2<-0
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-12345678901234567896
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-12345678901234567896
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-12345678901234567896
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-12345678901234567896
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-3132333435363738393031323334353637383936
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-12345678901234567896
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestSpaceAtEnd #1->\edef \resultA {#1}\edef \resultB {#1 }\Expect *{\resultA \space }*{\resultB }
#1<-\bigintcalcOdd {12345678901234567896}
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-12345678901234567896
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-12345678901234567896
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-12345678901234567896
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-12345678901234567896
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-3132333435363738393031323334353637383936
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-12345678901234567896
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-12345678901234567896
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-12345678901234567896
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-12345678901234567896
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-12345678901234567896
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-3132333435363738393031323334353637383936
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-12345678901234567896
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\resultA \space 
\resultA ->0
\space -> 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-\resultB 
\resultB ->0 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-12345678901234567896
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-12345678901234567896
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-12345678901234567896
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-3132333435363738393031323334353637383936
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-12345678901234567896
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\x ->\Test {\BigIntCalcOdd 12345678901234567896!}{0}
\Test #1#2->\TestResult {#1}{#2}\TestResultTwoExpansions {#1}{#2}\TestSpaceAtEnd {#1}
#1<-\BigIntCalcOdd 12345678901234567896!
#2<-0
\TestResult #1#2->\edef \result {#1}\Expect *{\result }{#2}
#1<-\BigIntCalcOdd 12345678901234567896!
#2<-0
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-12345678901234567896
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\result 
\result ->0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestResultTwoExpansions #1#2->\expandafter \expandafter \expandafter \Expect \expandafter \expandafter \expandafter {#1}{#2}
#1<-\BigIntCalcOdd 12345678901234567896!
#2<-0
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-12345678901234567896
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-0
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestSpaceAtEnd #1->\edef \resultA {#1}\edef \resultB {#1 }\Expect *{\resultA \space }*{\resultB }
#1<-\BigIntCalcOdd 12345678901234567896!
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-12345678901234567896
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-12345678901234567896
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 0
#2<-\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\resultA \space 
\resultA ->0
\space -> 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-\resultB 
\resultB ->0 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestOdd #1#2->\Test {\bigintcalcOdd {#1}}{#2}\edef \x {\noexpand \Test {\noexpand \BigIntCalcOdd \bigintcalcAbs {#1}!}{#2}}\x 
#1<-12345678901234567897
#2<-1
\Test #1#2->\TestResult {#1}{#2}\TestResultTwoExpansions {#1}{#2}\TestSpaceAtEnd {#1}
#1<-\bigintcalcOdd {12345678901234567897}
#2<-1
\TestResult #1#2->\edef \result {#1}\Expect *{\result }{#2}
#1<-\bigintcalcOdd {12345678901234567897}
#2<-1
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-12345678901234567897
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-12345678901234567897
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-12345678901234567897
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-12345678901234567897
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-3132333435363738393031323334353637383937
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-12345678901234567897
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\result 
\result ->1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestResultTwoExpansions #1#2->\expandafter \expandafter \expandafter \Expect \expandafter \expandafter \expandafter {#1}{#2}
#1<-\bigintcalcOdd {12345678901234567897}
#2<-1
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-12345678901234567897
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-12345678901234567897
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-12345678901234567897
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-12345678901234567897
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-3132333435363738393031323334353637383937
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-12345678901234567897
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestSpaceAtEnd #1->\edef \resultA {#1}\edef \resultB {#1 }\Expect *{\resultA \space }*{\resultB }
#1<-\bigintcalcOdd {12345678901234567897}
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-12345678901234567897
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-12345678901234567897
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-12345678901234567897
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-12345678901234567897
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-3132333435363738393031323334353637383937
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-12345678901234567897
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\bigintcalcOdd #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Odd \bigintcalcAbs {#1}!
#1<-12345678901234567897
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-12345678901234567897
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-12345678901234567897
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-12345678901234567897
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-3132333435363738393031323334353637383937
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-12345678901234567897
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\resultA \space 
\resultA ->1
\space -> 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-\resultB 
\resultB ->1 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\bigintcalcAbs #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Abs \bigintcalcNum {#1}
#1<-12345678901234567897
\bigintcalcNum #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Normalize \expandafter \expandafter \expandafter {\expandafter \expandafter \expandafter }\BIC@Expand {#1}!
#1<-12345678901234567897
\BIC@Expand #1->\romannumeral 0\expandafter \expandafter \expandafter \BIC@Space \pdf@unescapehex {\expandafter \expandafter \expandafter \BIC@StripHexSpace \pdf@escapehex {#1}20\@nil }
#1<-12345678901234567897
\pdf@unescapehex {->\pdfunescapehex {
\pdf@escapehex {->\pdfescapehex {
\BIC@StripHexSpace #120#2\@nil ->#1\ifx \\#2\\\else \BIC@AfterFi {\BIC@StripHexSpace #2\@nil }\BIC@Fi 
#1<-3132333435363738393031323334353637383937
#2<-
\BIC@Normalize #1#2->\ifx #2-\ifx \\#1\\\BIC@AfterFiFi {\BIC@Normalize -}\else \BIC@AfterFiFi {\BIC@Normalize {}}\fi \else \ifx #2+\BIC@AfterFiFi {\BIC@Normalize {#1}}\else \ifx #20\BIC@AfterFiFiFi {\BIC@NormalizeZero {#1}}\else \BIC@AfterFiFiFi {\BIC@NormalizeDigits #1#2}\fi \fi \BIC@Fi 
#1<-
#2<-1
\BIC@AfterFiFiFi #1#2\BIC@Fi ->\fi \fi \fi #1
#1<-\BIC@NormalizeDigits 1
#2<-\fi \fi 
\BIC@NormalizeDigits #1!-> #1
#1<-12345678901234567897
\BIC@Abs #1->\ifx #1-\expandafter \BIC@Space \else \expandafter \BIC@Space \expandafter #1\fi 
#1<-1
\x ->\Test {\BigIntCalcOdd 12345678901234567897!}{1}
\Test #1#2->\TestResult {#1}{#2}\TestResultTwoExpansions {#1}{#2}\TestSpaceAtEnd {#1}
#1<-\BigIntCalcOdd 12345678901234567897!
#2<-1
\TestResult #1#2->\edef \result {#1}\Expect *{\result }{#2}
#1<-\BigIntCalcOdd 12345678901234567897!
#2<-1
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-12345678901234567897
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\result 
\result ->1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestResultTwoExpansions #1#2->\expandafter \expandafter \expandafter \Expect \expandafter \expandafter \expandafter {#1}{#2}
#1<-\BigIntCalcOdd 12345678901234567897!
#2<-1
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-12345678901234567897
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\def 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\def \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-1
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\TestSpaceAtEnd #1->\edef \resultA {#1}\edef \resultB {#1 }\Expect *{\resultA \space }*{\resultB }
#1<-\BigIntCalcOdd 12345678901234567897!
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-12345678901234567897
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\BigIntCalcOdd #1!->\romannumeral 0\BIC@Odd #1!
#1<-12345678901234567897
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-0
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-0
#2<-1
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-1
#2<-2
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-2
#2<-3
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-3
#2<-4
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-4
#2<-5
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-5
#2<-6
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-6
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-8
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-8
#2<-9
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-9
#2<-7
\BIC@Odd #1#2->\ifx #2!\ifodd #1 \BIC@AfterFiFi { 1}\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter #2\BIC@Fi 
#1<-7
#2<-!
\BIC@AfterFiFi #1#2\BIC@Fi ->\fi \fi #1
#1<- 1
#2<-\else \BIC@AfterFiFi { 0}\fi \else \expandafter \BIC@Odd \expandafter !
\Expect ->\@protected@testopt \Expect \\Expect {}
\@protected@testopt #1->\ifx \protect \@typeset@protect \expandafter \@testopt \else \@x@protect #1\fi 
#1<-\Expect 
\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\\Expect 
#2<-
\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\\Expect 
#3<-\\Expect [{}]
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\\Expect [{}]
\\Expect [#1]->\edef \qst@tmpc {\unexpanded {#1}}\qst@expectarg \qst@defaultvalue \qst@expecttwo 
#1<-
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@defaultvalue 
#2<-\qst@expecttwo 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
#3<-\qst@expectargii \def \qst@defaultvalue \qst@expecttwo 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@defaultvalue \qst@expecttwo 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@defaultvalue 
#3<-\qst@expecttwo 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@defaultvalue ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@defaultvalue \qst@expecttwo 
#1<-\resultA \space 
\resultA ->1
\space -> 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@defaultvalue 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expecttwo ->\ifx \qst@tmpc \@empty \edef \qst@tmpc {\the \qst@tmptoks }\fi \qst@expectarg \qst@tmpb \qst@expectfinish 
\qst@expectarg #1#2->\@ifstar {\qst@expectargii \edef #1#2}{\qst@expectargii \def #1#2}
#1<-\qst@tmpb 
#2<-\qst@expectfinish 
\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b {#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
#3<-\qst@expectargii \def \qst@tmpb \qst@expectfinish 
\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserved@b \fi \fi \reserved@c 
\reserved@c ->\@firstoftwo {\qst@expectargii \edef \qst@tmpb \qst@expectfinish }
\@firstoftwo #1#2->#1
#1<-\qst@expectargii \edef \qst@tmpb \qst@expectfinish 
#2<-*
\qst@expectargii #1#2#3->\long \def \qst@tmp ##1{#1#2####1####2####3####4####5####6####7####8####9{##1}\@onelevel@sanitize #2#3}\afterassignment \qst@expectargiii \qst@tmptoks =
#1<-\edef 
#2<-\qst@tmpb 
#3<-\qst@expectfinish 
\qst@expectargiii ->\expandafter \qst@tmp \expandafter {\the \qst@tmptoks }
\qst@tmp #1->\edef \qst@tmpb ##1##2##3##4##5##6##7##8##9{#1}\@onelevel@sanitize \qst@tmpb \qst@expectfinish 
#1<-\resultB 
\resultB ->1 
\@onelevel@sanitize #1->\edef #1{\expandafter \strip@prefix \meaning #1}
#1<-\qst@tmpb 
\strip@prefix #1>->
#1<-macro:#1#2#3#4#5#6#7#8#9-
\qst@expectfinish ->\ifx \qst@defaultvalue \qst@tmpb \else \qst@error { \string \Expect : \unexpanded \expandafter {\qst@tmpc }
 <\qst@tmpb 
 >\qst@defaultvalue }\fi 
\end ->\romannumeral \ifx \protect \@typeset@protect \expandafter \expandafter \expandafter \expandafter \expandafter \expandafter \expandafter \z@ \else \expandafter \z@ \expandafter \protect \fi \end  
\end  #1->\csname end#1\endcsname \@checkend {#1}\expandafter \endgroup \if@endpe \@doendpe \fi \if@ignore \@ignorefalse \ignorespaces \fi 
#1<-qstest
\endqstest ->\StopTime \saved@endqstest 
\StopTime ->\TestTime =\pdfelapsedtime \global \advance \SummaryTime \TestTime \PrintTime \TimeDescription \TestTime 
\PrintTime #1#2->
#1<-\TimeDescription 
#2<-\TestTime 
\saved@endqstest ->\ifqst@testpassed \edef \qst@message {Passed: \qst@testname }\qst@passed \else \ifx \qst@testname \qst@lastfailure \else \edef \qst@message {Failed: \qst@testname }\qst@failed \fi \fi 
\qst@testname ->odd
\qst@passed ->\qst@maybelog +{log}{\PackageInfo {qstest}{\qst@message }}
\qst@maybelog #1#2#3->\csname qst:#1log:#2\endcsname \qst@options {#3}{}
#1<-+
#2<-log
#3<-\PackageInfo {qstest}{\qst@message }
\qst:+log:log #1->\qst@setup #1\qst@checkname {##2}\@firstoftwo \qst@finish 
#1<-\qst@options 
\qst@setup ->\let \MatchedTarget \@undefined \let \qst@finish \@secondoftwo \futurelet \qst@matchlist \qst@setupii 
\qst@setupii ->\ifcase \ifcat \noexpand \qst@matchlist \bgroup \@ne \fi \ifx \qst@matchlist [\tw@ \fi \m@ne \or \expandafter \MakeMatchTarget \expandafter \qst@matchlist \or \expandafter \qst@setupiii \else \expandafter \@gobble \fi 
\@gobble #1->
#1<-\qst@options 
\qst@checkname #1->\def \qst@mmtmp ##1\,#1\,{#1\,\@nil }\expandafter \expandafter \expandafter \qst@checknameii \expandafter \qst@mmtmp \expandafter \,\qst@matchlist \,#1\,\@nil 
#1<-##2
\qst@matchlist ->odd
\qst@mmtmp #1\,#2\,->#2\,\@nil 
#1<-
#2<-odd
\qst@checknameii #1\,#2\@nil #3->\ifcase \ifx \@nil #3\@ne \fi \ifx \@nil #2\@nil \tw@ \fi \m@ne \or \expandafter \qst@checknamenomatch \or \expandafter \qst@checknamematch \fi \expandafter \qst@checknameii \qst@mmtmp #1\,#2#3
#1<-odd
#2<-
#3<-##
\qst@checknamematch #1\qst@mmtmp #2\,#3\@nil ->\def \MatchedTarget {#2}\let \qst@finish 
#1<-\expandafter \qst@checknameii 
#2<-odd
#3<-##2\,
\qst@finish #1#2->#1
#1<-\PackageInfo {qstest}{\qst@message }
#2<-
\PackageInfo #1#2->\GenericInfo {(#1) \@spaces \@spaces \@spaces }{Package #1 Info: #2}
#1<-qstest
#2<-\qst@message 
\GenericInfo ->\protect \GenericInfo  
\GenericInfo  #1#2->\begingroup \def \MessageBreak {
#1}\set@display@protect \immediate \write \m@ne {#2\on@line .}\endgroup 
#1<-(qstest) \@spaces \@spaces \@spaces 
#2<-Package qstest Info: \qst@message 
\set@display@protect ->\let \protect \string 
\qst@message ->Passed: odd
\on@line -> on input line ...\the \inputlineno 
Package qstest Info: Passed: odd on input line ....
\@checkend #1->\def \reserved@a {#1}\ifx \reserved@a \@currenvir \else \@badend {#1}\fi 
#1<-qstest
Package qstest Info: Passed: inc on input line ....
Package qstest Info: Passed: dec on input line ....
Package qstest Info: Passed: add on input line ....
Package qstest Info: Passed: sub on input line ....
Package qstest Info: Passed: shl on input line ....
Package qstest Info: Passed: shr on input line ....
Package qstest Info: Passed: mul on input line ....
Package qstest Info: Passed: sqr on input line ....
Package qstest Info: Passed: fac on input line ....
Package qstest Info: Passed: pow on input line ....
Package qstest Info: Passed: div on input line ....
Package qstest Info: Passed: mod on input line ....
Package qstest Info: Passed: error on input line ....
No file bigintcalc-test2.aux.
LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
